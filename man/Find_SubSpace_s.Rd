% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Palette.R
\name{Find_SubSpace_s}
\alias{Find_SubSpace_s}
\title{Find simplified subspace embedding for a given modality}
\usage{
Find_SubSpace_s(
  object,
  modal = NULL,
  sample = NULL,
  lambda_i = NULL,
  dim.reduce = TRUE,
  sub_dims = NULL,
  proj_scale = T,
  proj_center = T,
  L2.norm = TRUE,
  seed = 123L,
  pre.reduce = TRUE,
  pre_dims = list(1:300),
  RP_thresh = 10000
)
}
\arguments{
\item{object}{An analysis object containing assay data, metadata, and representative cells.}

\item{modal}{A character string specifying the modality to process.}

\item{sample}{A character string specifying which sample(s) to include (default: NULL, use all).}

\item{lambda_i}{A numeric regularization parameter applied during kernel adjustment.}

\item{dim.reduce}{Logical; whether to perform dimensionality reduction (default: TRUE).}

\item{sub_dims}{Integer vector specifying which subspace dimensions to retain.}

\item{proj_scale}{Logical; whether to scale features during projection (default: TRUE).}

\item{proj_center}{Logical; whether to center features during projection (default: TRUE).}

\item{L2.norm}{Logical; whether to apply L2 normalization to the final embedding (default: TRUE).}

\item{seed}{Integer random seed for reproducibility (default: 123L).}

\item{pre.reduce}{Logical; whether to perform pre-dimensionality reduction before random projection (default: TRUE).}

\item{pre_dims}{List of integer vectors specifying dimensions to keep in pre-reduction (default: list(1:300)).}

\item{RP_thresh}{Integer; number of rows above which random projection is applied (default: 10000).}
}
\value{
A list containing:
\item{emb}{A matrix of subspace embeddings for cells.}
\item{Index}{Indices of the assays used.}
\item{Subspace}{The learned subspace basis matrix.}
}
\description{
\code{Find_SubSpace_s} computes a simplified low-dimensional subspace representation
for cells in a given modality by constructing kernel matrices, applying dimensionality
reduction or random projection, and extracting subspace embeddings.
Compared to \code{Find_SubSpace}, this version uses \code{Build.Kernel.cluster_S}
and \code{Run_Multi_SVD_s} for efficiency.
}
\keyword{internal}
